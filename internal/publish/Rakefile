require_relative 'rakefile_support'
require_relative '../lib/tracking'
require 'shellwords'
require 'tmpdir'
require 'uri'

initialize_rakefile!
initialize_tracking_database!(SHOW_OVERVIEW_PERIODICALLY)


desc "Publish all packages"
task "publish:all"

task :init_repo_server_client => REPO_SERVER_YANK_ALL_TASKS do
  initialize_tracking_database_logs!
end


##### Tasks for the 'yank all' feature #####

if REPO_SERVER_YANK_ALL_TASKS.any?
  register_tracking_category(:yank, "Yanking")
  register_tracking_task(:yank, 'all')
  task('yank_all') do
    track_task(:yank, 'all', false) do |task|
      retry_at_most(task, 1) do
        task.log "Yanking all packages"

        url = URI.parse("https://#{REPOSITORY}.phusionpassenger.com/api/clear")
        request = Net::HTTP::Post.new(url)
        request.basic_auth(REPO_SERVER_API_USERNAME, REPO_SERVER_API_TOKEN)
        response = REPO_SERVER_HTTP.request(url, request)
        if response.code != "200"
          task.log "Unable to yank all packages:"
          task.log "URL   : #{url}"
          task.log "Status: #{response.code}"
          task.log "Body  : #{response.body}"
          abort
        end
      end
    end
  end
end


##### Publishing tasks #####

register_tracking_category(:publish, "Packages")

DISTROS.each do |distro_dir, distro_version|
  desc "Publish el#{distro_version} packages"
  task "publish:all" => "publish:el#{distro_version}"
  register_tracking_task(:publish, "el#{distro_version}")
  task "publish:el#{distro_version}" => [:init_repo_server_client] do
    track_task(:publish, "el#{distro_version}", false) do |task|

    Dir.mktmpdir do |tmpdir|
      task.sh "tar -cf #{Shellwords.escape tmpdir}/#{Shellwords.escape distro_dir}.tar" \
              " --strip-components 3 " +
              Dir["/output/#{Shellwords.escape distro_dir}/*.rpm"].join(' ')

      # Create curl config file with auth details
      # https://stackoverflow.com/a/27894407/20816
      File.open("#{Shellwords.escape tmpdir}/netrc", 'w:utf-8') do |f|
        f.write("machine #{REPOSITORY}.phusionpassenger.com" \
                " login #{REPO_SERVER_API_USERNAME}" \
                " password #{REPO_SERVER_API_TOKEN}\n")
      end

      # Upload tarball to the repo server
      retry_at_most(task, 1) do
        task.sh "curl -sSLf" \
                " --netrc-file #{Shellwords.escape tmpdir}/netrc" \
                " -F distro_class=el" \
                " -F distro_version=#{distro_version}" \
                " -F force=#{YANK}" \
                " -F packages=@#{Shellwords.escape tmpdir}/#{Shellwords.escape distro_dir}.tar" \
                " https://#{REPOSITORY}.phusionpassenger.com/api/import"
      end
    end
    end
  end
end

task :start do
  initialize_tracking_database_logs!
end

task :finish do
  puts
  TRACKING_DB.monitor.synchronize do
    TRACKING_DB.set_finished!
    dump_tracking_database
  end
end
